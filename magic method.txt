Python magic methods or special functions for operator overloading

Binary Operators:

Operator			Magic Method
+					__add__(self, other)
–					__sub__(self, other)
*					__mul__(self, other)
/					__truediv__(self, other)
//					__floordiv__(self, other)
%					__mod__(self, other)
**					__pow__(self, other)
>>					__rshift__(self, other)
<<					__lshift__(self, other)
&					__and__(self, other)
|					__or__(self, other)
^					__xor__(self, other)


Comparison Operators :

Operator			Magic Method
<					__lt__(self, other)
>					__gt__(self, other)
<=					__le__(self, other)
>=					__ge__(self, other)
==					__eq__(self, other)
!=					__ne__(self, other)


Assignment Operators :

Operator			Magic Method
-=					__isub__(self, other)
+=					__iadd__(self, other)
*=					__imul__(self, other)
/=					__idiv__(self, other)
//=					__ifloordiv__(self, other)
%=					__imod__(self, other)
**=					__ipow__(self, other)
>>=					__irshift__(self, other)
<<=					__ilshift__(self, other)
&=					__iand__(self, other)
|=					__ior__(self, other)
^=					__ixor__(self, other)


Unary Operators :

Operator			Magic Method
–					__neg__(self)
+					__pos__(self)
~					__invert__(self)